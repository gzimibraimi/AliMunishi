{"ast":null,"code":"import{BrowserRouter as Router,Routes,Route,Navigate}from\"react-router-dom\";import Dashboard from\"./pages/Dashboard\";import Consumers from\"./pages/Consumers\";import Readings from\"./pages/Readings\";import History from\"./pages/History\";import Navbar from\"./components/Navbar\";import{useState}from\"react\";import Login from\"./pages/Login\";import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";function App(){const[user,setUser]=useState(null);// Komponent për rrethim të rrugëve që kërkojnë login\nconst PrivateRoute=_ref=>{let{children}=_ref;return user?children:/*#__PURE__*/_jsx(Navigate,{to:\"/login\",replace:true});};const isAdmin=user&&user.role===\"admin\";return/*#__PURE__*/_jsxs(Router,{children:[user&&/*#__PURE__*/_jsx(Navbar,{user:user,setUser:setUser}),/*#__PURE__*/_jsxs(Routes,{children:[/*#__PURE__*/_jsx(Route,{path:\"/login\",element:/*#__PURE__*/_jsx(Login,{onLogin:setUser})}),/*#__PURE__*/_jsx(Route,{path:\"/\",element:/*#__PURE__*/_jsx(PrivateRoute,{children:/*#__PURE__*/_jsx(Dashboard,{user:user})})}),/*#__PURE__*/_jsx(Route,{path:\"/consumers\",element:/*#__PURE__*/_jsx(PrivateRoute,{children:/*#__PURE__*/_jsx(Consumers,{user:user})})}),isAdmin&&/*#__PURE__*/_jsx(Route,{path:\"/readings\",element:/*#__PURE__*/_jsx(PrivateRoute,{children:/*#__PURE__*/_jsx(Readings,{user:user})})}),/*#__PURE__*/_jsx(Route,{path:\"/history\",element:/*#__PURE__*/_jsx(PrivateRoute,{children:/*#__PURE__*/_jsx(History,{user:user})})}),/*#__PURE__*/_jsx(Route,{path:\"*\",element:/*#__PURE__*/_jsx(Navigate,{to:user?\"/\":\"/login\",replace:true})})]})]});}export default App;","map":{"version":3,"names":["BrowserRouter","Router","Routes","Route","Navigate","Dashboard","Consumers","Readings","History","Navbar","useState","Login","jsx","_jsx","jsxs","_jsxs","App","user","setUser","PrivateRoute","_ref","children","to","replace","isAdmin","role","path","element","onLogin"],"sources":["D:/AliMunishiApp/frontend/src/App.jsx"],"sourcesContent":["import { BrowserRouter as Router, Routes, Route, Navigate } from \"react-router-dom\";\r\nimport Dashboard from \"./pages/Dashboard\";\r\nimport Consumers from \"./pages/Consumers\";\r\nimport Readings from \"./pages/Readings\";\r\nimport History from \"./pages/History\";\r\nimport Navbar from \"./components/Navbar\";\r\nimport { useState } from \"react\";\r\nimport Login from \"./pages/Login\";\r\n\r\nfunction App() {\r\n  const [user, setUser] = useState(null);\r\n\r\n  // Komponent për rrethim të rrugëve që kërkojnë login\r\n  const PrivateRoute = ({ children }) => {\r\n    return user ? children : <Navigate to=\"/login\" replace />;\r\n  };\r\n\r\n  const isAdmin = user && user.role === \"admin\";\r\n\r\n  return (\r\n    <Router>\r\n      {user && <Navbar user={user} setUser={setUser} />}\r\n\r\n      <Routes>\r\n        <Route path=\"/login\" element={<Login onLogin={setUser} />} />\r\n\r\n        <Route\r\n          path=\"/\"\r\n          element={\r\n            <PrivateRoute>\r\n              <Dashboard user={user} />\r\n            </PrivateRoute>\r\n          }\r\n        />\r\n\r\n        <Route\r\n          path=\"/consumers\"\r\n          element={\r\n            <PrivateRoute>\r\n              <Consumers user={user} />\r\n            </PrivateRoute>\r\n          }\r\n        />\r\n\r\n        {isAdmin && (\r\n          <Route\r\n            path=\"/readings\"\r\n            element={\r\n              <PrivateRoute>\r\n                <Readings user={user} />\r\n              </PrivateRoute>\r\n            }\r\n          />\r\n        )}\r\n\r\n        <Route\r\n          path=\"/history\"\r\n          element={\r\n            <PrivateRoute>\r\n              <History user={user} />\r\n            </PrivateRoute>\r\n          }\r\n        />\r\n\r\n        {/* Fsheh çdo rrugë tjetër, bazuar në login dhe rol */}\r\n        <Route\r\n          path=\"*\"\r\n          element={\r\n            <Navigate to={user ? \"/\" : \"/login\"} replace />\r\n          }\r\n        />\r\n      </Routes>\r\n    </Router>\r\n  );\r\n}\r\n\r\nexport default App;\r\n"],"mappings":"AAAA,OAASA,aAAa,GAAI,CAAAC,MAAM,CAAEC,MAAM,CAAEC,KAAK,CAAEC,QAAQ,KAAQ,kBAAkB,CACnF,MAAO,CAAAC,SAAS,KAAM,mBAAmB,CACzC,MAAO,CAAAC,SAAS,KAAM,mBAAmB,CACzC,MAAO,CAAAC,QAAQ,KAAM,kBAAkB,CACvC,MAAO,CAAAC,OAAO,KAAM,iBAAiB,CACrC,MAAO,CAAAC,MAAM,KAAM,qBAAqB,CACxC,OAASC,QAAQ,KAAQ,OAAO,CAChC,MAAO,CAAAC,KAAK,KAAM,eAAe,CAAC,OAAAC,GAAA,IAAAC,IAAA,CAAAC,IAAA,IAAAC,KAAA,yBAElC,QAAS,CAAAC,GAAGA,CAAA,CAAG,CACb,KAAM,CAACC,IAAI,CAAEC,OAAO,CAAC,CAAGR,QAAQ,CAAC,IAAI,CAAC,CAEtC;AACA,KAAM,CAAAS,YAAY,CAAGC,IAAA,EAAkB,IAAjB,CAAEC,QAAS,CAAC,CAAAD,IAAA,CAChC,MAAO,CAAAH,IAAI,CAAGI,QAAQ,cAAGR,IAAA,CAACT,QAAQ,EAACkB,EAAE,CAAC,QAAQ,CAACC,OAAO,MAAE,CAAC,CAC3D,CAAC,CAED,KAAM,CAAAC,OAAO,CAAGP,IAAI,EAAIA,IAAI,CAACQ,IAAI,GAAK,OAAO,CAE7C,mBACEV,KAAA,CAACd,MAAM,EAAAoB,QAAA,EACJJ,IAAI,eAAIJ,IAAA,CAACJ,MAAM,EAACQ,IAAI,CAAEA,IAAK,CAACC,OAAO,CAAEA,OAAQ,CAAE,CAAC,cAEjDH,KAAA,CAACb,MAAM,EAAAmB,QAAA,eACLR,IAAA,CAACV,KAAK,EAACuB,IAAI,CAAC,QAAQ,CAACC,OAAO,cAAEd,IAAA,CAACF,KAAK,EAACiB,OAAO,CAAEV,OAAQ,CAAE,CAAE,CAAE,CAAC,cAE7DL,IAAA,CAACV,KAAK,EACJuB,IAAI,CAAC,GAAG,CACRC,OAAO,cACLd,IAAA,CAACM,YAAY,EAAAE,QAAA,cACXR,IAAA,CAACR,SAAS,EAACY,IAAI,CAAEA,IAAK,CAAE,CAAC,CACb,CACf,CACF,CAAC,cAEFJ,IAAA,CAACV,KAAK,EACJuB,IAAI,CAAC,YAAY,CACjBC,OAAO,cACLd,IAAA,CAACM,YAAY,EAAAE,QAAA,cACXR,IAAA,CAACP,SAAS,EAACW,IAAI,CAAEA,IAAK,CAAE,CAAC,CACb,CACf,CACF,CAAC,CAEDO,OAAO,eACNX,IAAA,CAACV,KAAK,EACJuB,IAAI,CAAC,WAAW,CAChBC,OAAO,cACLd,IAAA,CAACM,YAAY,EAAAE,QAAA,cACXR,IAAA,CAACN,QAAQ,EAACU,IAAI,CAAEA,IAAK,CAAE,CAAC,CACZ,CACf,CACF,CACF,cAEDJ,IAAA,CAACV,KAAK,EACJuB,IAAI,CAAC,UAAU,CACfC,OAAO,cACLd,IAAA,CAACM,YAAY,EAAAE,QAAA,cACXR,IAAA,CAACL,OAAO,EAACS,IAAI,CAAEA,IAAK,CAAE,CAAC,CACX,CACf,CACF,CAAC,cAGFJ,IAAA,CAACV,KAAK,EACJuB,IAAI,CAAC,GAAG,CACRC,OAAO,cACLd,IAAA,CAACT,QAAQ,EAACkB,EAAE,CAAEL,IAAI,CAAG,GAAG,CAAG,QAAS,CAACM,OAAO,MAAE,CAC/C,CACF,CAAC,EACI,CAAC,EACH,CAAC,CAEb,CAEA,cAAe,CAAAP,GAAG","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}