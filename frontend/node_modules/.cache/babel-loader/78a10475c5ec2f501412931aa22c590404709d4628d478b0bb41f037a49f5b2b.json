{"ast":null,"code":"var _jsxFileName = \"D:\\\\AliMunishiApp\\\\frontend\\\\src\\\\pages\\\\Readings.jsx\",\n  _s = $RefreshSig$();\nimport { useEffect, useState } from \"react\";\nimport jsPDF from \"jspdf\";\nimport \"jspdf-autotable\";\nimport \"../styles/readings.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Readings() {\n  _s();\n  const [consumers, setConsumers] = useState([]);\n  const [loadingConsumers, setLoadingConsumers] = useState(true);\n  const [readings, setReadings] = useState([]);\n  const [form, setForm] = useState({\n    consumerId: \"\",\n    currentReading: \"\"\n  });\n  const [selectedConsumerId, setSelectedConsumerId] = useState(\"\");\n  const [selectedDate, setSelectedDate] = useState(\"\");\n  const [submitting, setSubmitting] = useState(false);\n\n  // Merr konsumatorët nga backend\n  useEffect(() => {\n    fetch(\"http://localhost:5000/api/consumers\").then(res => res.json()).then(data => {\n      setConsumers(data);\n      setLoadingConsumers(false);\n    }).catch(err => {\n      console.error(\"Gabim gjatë marrjes së konsumatorëve:\", err);\n      setLoadingConsumers(false);\n    });\n  }, []);\n\n  // Merr leximet për çdo konsumator pasi konsumatorët të jenë ngarkuar\n  useEffect(() => {\n    const loadReadings = async () => {\n      try {\n        const allReadings = [];\n        for (const c of consumers) {\n          const res = await fetch(`http://localhost:5000/api/readings/${c.id}`);\n          if (!res.ok) throw new Error(\"Gabim në kërkesë për lexime\");\n          const data = await res.json();\n\n          // Shto të dhëna të konsumatorit në secilin lexim\n          const enriched = data.map(r => ({\n            ...r,\n            name: c.name,\n            surname: c.surname,\n            address: c.address,\n            type: c.type\n          }));\n          allReadings.push(...enriched);\n        }\n        setReadings(allReadings);\n      } catch (error) {\n        console.error(\"Gabim gjatë marrjes së leximeve:\", error);\n      }\n    };\n    if (consumers.length > 0) {\n      loadReadings();\n    }\n  }, [consumers]);\n  const handleChange = e => {\n    setForm({\n      ...form,\n      [e.target.name]: e.target.value\n    });\n  };\n  const submitReading = async e => {\n    e.preventDefault();\n    setSubmitting(true);\n    const consumerIdNum = parseInt(form.consumerId);\n    const consumer = consumers.find(c => c.id === consumerIdNum);\n    if (!consumer) {\n      alert(\"Zgjidh një konsumator të vlefshëm\");\n      setSubmitting(false);\n      return;\n    }\n    const current = parseFloat(form.currentReading);\n    if (isNaN(current) || current < 0) {\n      alert(\"Fut një lexim të vlefshëm numerik\");\n      setSubmitting(false);\n      return;\n    }\n\n    // Gjej leximin më të fundit për këtë konsumator\n    const lastReading = readings.filter(r => r.consumerId === consumerIdNum).sort((a, b) => new Date(b.date) - new Date(a.date))[0];\n    const previous = lastReading ? lastReading.currentReading : 0;\n    if (current < previous) {\n      alert(`Leximi i tanishëm (${current}) nuk mund të jetë më i vogël se leximi i mëparshëm (${previous})`);\n      setSubmitting(false);\n      return;\n    }\n    const pricePerM3 = consumer.type.toLowerCase() === \"biznes\" ? 1.2 : 0.5;\n    const consumption = current - previous;\n    const total = consumption * pricePerM3;\n    const newReading = {\n      consumerId: consumer.id,\n      date: new Date().toISOString(),\n      previousReading: previous,\n      currentReading: current,\n      consumption,\n      total\n    };\n    try {\n      const response = await fetch(\"http://localhost:5000/api/readings\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify(newReading)\n      });\n      if (!response.ok) {\n        throw new Error(\"Gabim gjatë ruajtjes së leximit në backend\");\n      }\n      const savedReading = await response.json();\n\n      // Shto emra dhe të dhëna të konsumatorit në leximin e ri për t'u shfaqur\n      const enrichedSavedReading = {\n        ...savedReading,\n        name: consumer.name,\n        surname: consumer.surname,\n        address: consumer.address,\n        type: consumer.type\n      };\n      setReadings(prev => [...prev, enrichedSavedReading]);\n      setForm({\n        consumerId: \"\",\n        currentReading: \"\"\n      });\n    } catch (error) {\n      alert(error.message);\n    } finally {\n      setSubmitting(false);\n    }\n  };\n  const generatePDF = reading => {\n    const doc = new jsPDF();\n    doc.setFontSize(18);\n    doc.text(\"Fatura për Ujë\", 70, 20);\n    doc.setFontSize(12);\n    doc.text(`Emri: ${reading.name} ${reading.surname}`, 20, 40);\n    doc.text(`Adresa: ${reading.address}`, 20, 50);\n    doc.text(`Tipi: ${reading.type}`, 20, 60);\n    doc.text(`Data: ${new Date(reading.date).toLocaleDateString()}`, 20, 70);\n    doc.autoTable({\n      startY: 80,\n      head: [[\"Leximi i Mëparshëm\", \"Leximi i Tanishëm\", \"Konsumi (m³)\", \"Çmimi për m³\", \"Totali\"]],\n      body: [[reading.previousReading, reading.currentReading, reading.consumption, reading.type === \"Biznes\" ? \"1.2\" : \"0.5\", `${reading.total.toFixed(2)} €`]]\n    });\n    doc.save(`fature_${reading.name}_${reading.surname}.pdf`);\n  };\n\n  // Filtrim leximesh sipas konsumatorit dhe datës\n  const filteredReadings = readings.filter(r => {\n    const matchConsumer = selectedConsumerId ? r.consumerId === parseInt(selectedConsumerId) : true;\n    const matchDate = selectedDate ? new Date(r.date).toLocaleDateString() === new Date(selectedDate).toLocaleDateString() : true;\n    return matchConsumer && matchDate;\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"readings-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Lexim i ri i ujit\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 193,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: submitReading,\n      className: \"readings-form\",\n      children: [/*#__PURE__*/_jsxDEV(\"select\", {\n        name: \"consumerId\",\n        value: form.consumerId,\n        onChange: handleChange,\n        required: true,\n        disabled: loadingConsumers || submitting,\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"\",\n          children: \"Zgjedh konsumatorin\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 202,\n          columnNumber: 11\n        }, this), consumers.map(c => /*#__PURE__*/_jsxDEV(\"option\", {\n          value: c.id,\n          children: [c.name, \" \", c.surname, \" - \", c.type]\n        }, c.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 204,\n          columnNumber: 13\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 195,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"number\",\n        name: \"currentReading\",\n        placeholder: \"Leximi i tanish\\xEBm\",\n        value: form.currentReading,\n        onChange: handleChange,\n        required: true,\n        min: \"0\",\n        step: \"any\",\n        disabled: submitting\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 209,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        disabled: submitting,\n        children: submitting ? \"Po ruhet...\" : \"Ruaj leximin\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 220,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 194,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Historiku i leximeve\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 225,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"filters\",\n      children: [/*#__PURE__*/_jsxDEV(\"select\", {\n        value: selectedConsumerId,\n        onChange: e => setSelectedConsumerId(e.target.value),\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"\",\n          children: \"T\\xEB gjith\\xEB konsumator\\xEBt\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 232,\n          columnNumber: 11\n        }, this), consumers.map(c => /*#__PURE__*/_jsxDEV(\"option\", {\n          value: c.id,\n          children: [c.name, \" \", c.surname]\n        }, c.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 234,\n          columnNumber: 13\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 228,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"date\",\n        value: selectedDate,\n        onChange: e => setSelectedDate(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 239,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => {\n          setSelectedConsumerId(\"\");\n          setSelectedDate(\"\");\n        },\n        children: \"Pastro filtrat\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 244,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 227,\n      columnNumber: 7\n    }, this), filteredReadings.length === 0 ? /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"no-readings-msg\",\n      children: \"Nuk ka lexime p\\xEBr k\\xEBt\\xEB filt\\xEBr.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 255,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"readings-table-wrapper\",\n      children: /*#__PURE__*/_jsxDEV(\"table\", {\n        className: \"readings-table\",\n        children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n          children: /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Konsumatori\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 261,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              style: {\n                textAlign: \"right\"\n              },\n              children: \"Leximi i m\\xEBparsh\\xEBm\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 262,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              style: {\n                textAlign: \"right\"\n              },\n              children: \"Leximi i tanish\\xEBm\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 263,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              style: {\n                textAlign: \"right\"\n              },\n              children: \"Konsumi (m\\xB3)\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 264,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              style: {\n                textAlign: \"right\"\n              },\n              children: \"Totali (MKD)\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 265,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              style: {\n                textAlign: \"right\"\n              },\n              children: \"Data\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 266,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"PDF\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 267,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 260,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 259,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n          children: filteredReadings.sort((a, b) => new Date(b.date) - new Date(a.date)).map((r, i) => /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"td\", {\n              children: [r.name, \" \", r.surname]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 275,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              className: \"numeric\",\n              children: r.previousReading\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 276,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              className: \"numeric\",\n              children: r.currentReading\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 277,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              className: \"numeric\",\n              children: r.consumption\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 278,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              className: \"numeric\",\n              children: [\"\\u20AC\", r.total.toFixed(2)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 279,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              className: \"numeric\",\n              children: new Date(r.date).toLocaleString()\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 280,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: /*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: () => generatePDF(r),\n                children: \"Shkarko PDF\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 282,\n                columnNumber: 23\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 281,\n              columnNumber: 21\n            }, this)]\n          }, i, true, {\n            fileName: _jsxFileName,\n            lineNumber: 274,\n            columnNumber: 19\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 270,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 258,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 257,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 192,\n    columnNumber: 5\n  }, this);\n}\n_s(Readings, \"eHSDIhKpVL/CJD3ZFWNrSvNXmkE=\");\n_c = Readings;\nvar _c;\n$RefreshReg$(_c, \"Readings\");","map":{"version":3,"names":["useEffect","useState","jsPDF","jsxDEV","_jsxDEV","Readings","_s","consumers","setConsumers","loadingConsumers","setLoadingConsumers","readings","setReadings","form","setForm","consumerId","currentReading","selectedConsumerId","setSelectedConsumerId","selectedDate","setSelectedDate","submitting","setSubmitting","fetch","then","res","json","data","catch","err","console","error","loadReadings","allReadings","c","id","ok","Error","enriched","map","r","name","surname","address","type","push","length","handleChange","e","target","value","submitReading","preventDefault","consumerIdNum","parseInt","consumer","find","alert","current","parseFloat","isNaN","lastReading","filter","sort","a","b","Date","date","previous","pricePerM3","toLowerCase","consumption","total","newReading","toISOString","previousReading","response","method","headers","body","JSON","stringify","savedReading","enrichedSavedReading","prev","message","generatePDF","reading","doc","setFontSize","text","toLocaleDateString","autoTable","startY","head","toFixed","save","filteredReadings","matchConsumer","matchDate","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","onChange","required","disabled","placeholder","min","step","onClick","style","textAlign","i","toLocaleString","_c","$RefreshReg$"],"sources":["D:/AliMunishiApp/frontend/src/pages/Readings.jsx"],"sourcesContent":["import { useEffect, useState } from \"react\";\r\nimport jsPDF from \"jspdf\";\r\nimport \"jspdf-autotable\";\r\nimport \"../styles/readings.css\";\r\n\r\nexport default function Readings() {\r\n  const [consumers, setConsumers] = useState([]);\r\n  const [loadingConsumers, setLoadingConsumers] = useState(true);\r\n  const [readings, setReadings] = useState([]);\r\n  const [form, setForm] = useState({\r\n    consumerId: \"\",\r\n    currentReading: \"\",\r\n  });\r\n  const [selectedConsumerId, setSelectedConsumerId] = useState(\"\");\r\n  const [selectedDate, setSelectedDate] = useState(\"\");\r\n  const [submitting, setSubmitting] = useState(false);\r\n\r\n  // Merr konsumatorët nga backend\r\n  useEffect(() => {\r\n    fetch(\"http://localhost:5000/api/consumers\")\r\n      .then((res) => res.json())\r\n      .then((data) => {\r\n        setConsumers(data);\r\n        setLoadingConsumers(false);\r\n      })\r\n      .catch((err) => {\r\n        console.error(\"Gabim gjatë marrjes së konsumatorëve:\", err);\r\n        setLoadingConsumers(false);\r\n      });\r\n  }, []);\r\n\r\n  // Merr leximet për çdo konsumator pasi konsumatorët të jenë ngarkuar\r\n  useEffect(() => {\r\n    const loadReadings = async () => {\r\n      try {\r\n        const allReadings = [];\r\n\r\n        for (const c of consumers) {\r\n          const res = await fetch(`http://localhost:5000/api/readings/${c.id}`);\r\n          if (!res.ok) throw new Error(\"Gabim në kërkesë për lexime\");\r\n          const data = await res.json();\r\n\r\n          // Shto të dhëna të konsumatorit në secilin lexim\r\n          const enriched = data.map((r) => ({\r\n            ...r,\r\n            name: c.name,\r\n            surname: c.surname,\r\n            address: c.address,\r\n            type: c.type,\r\n          }));\r\n\r\n          allReadings.push(...enriched);\r\n        }\r\n\r\n        setReadings(allReadings);\r\n      } catch (error) {\r\n        console.error(\"Gabim gjatë marrjes së leximeve:\", error);\r\n      }\r\n    };\r\n\r\n    if (consumers.length > 0) {\r\n      loadReadings();\r\n    }\r\n  }, [consumers]);\r\n\r\n  const handleChange = (e) => {\r\n    setForm({ ...form, [e.target.name]: e.target.value });\r\n  };\r\n\r\n  const submitReading = async (e) => {\r\n    e.preventDefault();\r\n    setSubmitting(true);\r\n\r\n    const consumerIdNum = parseInt(form.consumerId);\r\n    const consumer = consumers.find((c) => c.id === consumerIdNum);\r\n    if (!consumer) {\r\n      alert(\"Zgjidh një konsumator të vlefshëm\");\r\n      setSubmitting(false);\r\n      return;\r\n    }\r\n\r\n    const current = parseFloat(form.currentReading);\r\n    if (isNaN(current) || current < 0) {\r\n      alert(\"Fut një lexim të vlefshëm numerik\");\r\n      setSubmitting(false);\r\n      return;\r\n    }\r\n\r\n    // Gjej leximin më të fundit për këtë konsumator\r\n    const lastReading = readings\r\n      .filter((r) => r.consumerId === consumerIdNum)\r\n      .sort((a, b) => new Date(b.date) - new Date(a.date))[0];\r\n\r\n    const previous = lastReading ? lastReading.currentReading : 0;\r\n\r\n    if (current < previous) {\r\n      alert(\r\n        `Leximi i tanishëm (${current}) nuk mund të jetë më i vogël se leximi i mëparshëm (${previous})`\r\n      );\r\n      setSubmitting(false);\r\n      return;\r\n    }\r\n\r\n    const pricePerM3 = consumer.type.toLowerCase() === \"biznes\" ? 1.2 : 0.5;\r\n    const consumption = current - previous;\r\n    const total = consumption * pricePerM3;\r\n\r\n    const newReading = {\r\n      consumerId: consumer.id,\r\n      date: new Date().toISOString(),\r\n      previousReading: previous,\r\n      currentReading: current,\r\n      consumption,\r\n      total,\r\n    };\r\n\r\n    try {\r\n      const response = await fetch(\"http://localhost:5000/api/readings\", {\r\n        method: \"POST\",\r\n        headers: { \"Content-Type\": \"application/json\" },\r\n        body: JSON.stringify(newReading),\r\n      });\r\n\r\n      if (!response.ok) {\r\n        throw new Error(\"Gabim gjatë ruajtjes së leximit në backend\");\r\n      }\r\n\r\n      const savedReading = await response.json();\r\n\r\n      // Shto emra dhe të dhëna të konsumatorit në leximin e ri për t'u shfaqur\r\n      const enrichedSavedReading = {\r\n        ...savedReading,\r\n        name: consumer.name,\r\n        surname: consumer.surname,\r\n        address: consumer.address,\r\n        type: consumer.type,\r\n      };\r\n\r\n      setReadings((prev) => [...prev, enrichedSavedReading]);\r\n      setForm({ consumerId: \"\", currentReading: \"\" });\r\n    } catch (error) {\r\n      alert(error.message);\r\n    } finally {\r\n      setSubmitting(false);\r\n    }\r\n  };\r\n\r\n  const generatePDF = (reading) => {\r\n    const doc = new jsPDF();\r\n\r\n    doc.setFontSize(18);\r\n    doc.text(\"Fatura për Ujë\", 70, 20);\r\n\r\n    doc.setFontSize(12);\r\n    doc.text(`Emri: ${reading.name} ${reading.surname}`, 20, 40);\r\n    doc.text(`Adresa: ${reading.address}`, 20, 50);\r\n    doc.text(`Tipi: ${reading.type}`, 20, 60);\r\n    doc.text(`Data: ${new Date(reading.date).toLocaleDateString()}`, 20, 70);\r\n\r\n    doc.autoTable({\r\n      startY: 80,\r\n      head: [[\"Leximi i Mëparshëm\", \"Leximi i Tanishëm\", \"Konsumi (m³)\", \"Çmimi për m³\", \"Totali\"]],\r\n      body: [\r\n        [\r\n          reading.previousReading,\r\n          reading.currentReading,\r\n          reading.consumption,\r\n          reading.type === \"Biznes\" ? \"1.2\" : \"0.5\",\r\n          `${reading.total.toFixed(2)} €`,\r\n        ],\r\n      ],\r\n    });\r\n\r\n    doc.save(`fature_${reading.name}_${reading.surname}.pdf`);\r\n  };\r\n\r\n  // Filtrim leximesh sipas konsumatorit dhe datës\r\n  const filteredReadings = readings.filter((r) => {\r\n    const matchConsumer = selectedConsumerId\r\n      ? r.consumerId === parseInt(selectedConsumerId)\r\n      : true;\r\n\r\n    const matchDate = selectedDate\r\n      ? new Date(r.date).toLocaleDateString() ===\r\n        new Date(selectedDate).toLocaleDateString()\r\n      : true;\r\n\r\n    return matchConsumer && matchDate;\r\n  });\r\n\r\n  return (\r\n    <div className=\"readings-container\">\r\n      <h2>Lexim i ri i ujit</h2>\r\n      <form onSubmit={submitReading} className=\"readings-form\">\r\n        <select\r\n          name=\"consumerId\"\r\n          value={form.consumerId}\r\n          onChange={handleChange}\r\n          required\r\n          disabled={loadingConsumers || submitting}\r\n        >\r\n          <option value=\"\">Zgjedh konsumatorin</option>\r\n          {consumers.map((c) => (\r\n            <option key={c.id} value={c.id}>\r\n              {c.name} {c.surname} - {c.type}\r\n            </option>\r\n          ))}\r\n        </select>\r\n        <input\r\n          type=\"number\"\r\n          name=\"currentReading\"\r\n          placeholder=\"Leximi i tanishëm\"\r\n          value={form.currentReading}\r\n          onChange={handleChange}\r\n          required\r\n          min=\"0\"\r\n          step=\"any\"\r\n          disabled={submitting}\r\n        />\r\n        <button type=\"submit\" disabled={submitting}>\r\n          {submitting ? \"Po ruhet...\" : \"Ruaj leximin\"}\r\n        </button>\r\n      </form>\r\n\r\n      <h3>Historiku i leximeve</h3>\r\n\r\n      <div className=\"filters\">\r\n        <select\r\n          value={selectedConsumerId}\r\n          onChange={(e) => setSelectedConsumerId(e.target.value)}\r\n        >\r\n          <option value=\"\">Të gjithë konsumatorët</option>\r\n          {consumers.map((c) => (\r\n            <option key={c.id} value={c.id}>\r\n              {c.name} {c.surname}\r\n            </option>\r\n          ))}\r\n        </select>\r\n        <input\r\n          type=\"date\"\r\n          value={selectedDate}\r\n          onChange={(e) => setSelectedDate(e.target.value)}\r\n        />\r\n        <button\r\n          onClick={() => {\r\n            setSelectedConsumerId(\"\");\r\n            setSelectedDate(\"\");\r\n          }}\r\n        >\r\n          Pastro filtrat\r\n        </button>\r\n      </div>\r\n\r\n      {filteredReadings.length === 0 ? (\r\n        <p className=\"no-readings-msg\">Nuk ka lexime për këtë filtër.</p>\r\n      ) : (\r\n        <div className=\"readings-table-wrapper\">\r\n          <table className=\"readings-table\">\r\n            <thead>\r\n              <tr>\r\n                <th>Konsumatori</th>\r\n                <th style={{ textAlign: \"right\" }}>Leximi i mëparshëm</th>\r\n                <th style={{ textAlign: \"right\" }}>Leximi i tanishëm</th>\r\n                <th style={{ textAlign: \"right\" }}>Konsumi (m³)</th>\r\n                <th style={{ textAlign: \"right\" }}>Totali (MKD)</th>\r\n                <th style={{ textAlign: \"right\" }}>Data</th>\r\n                <th>PDF</th>\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              {filteredReadings\r\n                .sort((a, b) => new Date(b.date) - new Date(a.date))\r\n                .map((r, i) => (\r\n                  <tr key={i}>\r\n                    <td>{r.name} {r.surname}</td>\r\n                    <td className=\"numeric\">{r.previousReading}</td>\r\n                    <td className=\"numeric\">{r.currentReading}</td>\r\n                    <td className=\"numeric\">{r.consumption}</td>\r\n                    <td className=\"numeric\">€{r.total.toFixed(2)}</td>\r\n                    <td className=\"numeric\">{new Date(r.date).toLocaleString()}</td>\r\n                    <td>\r\n                      <button onClick={() => generatePDF(r)}>Shkarko PDF</button>\r\n                    </td>\r\n                  </tr>\r\n                ))}\r\n            </tbody>\r\n          </table>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}