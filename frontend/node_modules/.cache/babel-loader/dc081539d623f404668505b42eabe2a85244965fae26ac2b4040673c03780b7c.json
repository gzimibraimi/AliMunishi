{"ast":null,"code":"import _objectSpread from\"D:/AliMunishiApp/frontend/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";import{useEffect,useState}from\"react\";import jsPDF from\"jspdf\";import autoTable from\"jspdf-autotable\";import\"../styles/readings.css\";import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";export default function Readings(){const API_BASE=\"https://ujesjellesi.onrender.com/api\";const[consumers,setConsumers]=useState([]);const[loadingConsumers,setLoadingConsumers]=useState(true);const[readings,setReadings]=useState([]);const[form,setForm]=useState({consumerId:\"\",currentReading:\"\"});const[selectedConsumerId,setSelectedConsumerId]=useState(\"\");const[selectedDate,setSelectedDate]=useState(\"\");const[submitting,setSubmitting]=useState(false);// Merr konsumatorët nga backend\nuseEffect(()=>{fetch(\"\".concat(API_BASE,\"/consumers\")).then(res=>res.json()).then(data=>{setConsumers(data);setLoadingConsumers(false);}).catch(err=>{console.error(\"Gabim gjatë marrjes së konsumatorëve:\",err);setLoadingConsumers(false);});},[]);// Merr leximet për çdo konsumator pasi konsumatorët të jenë ngarkuar\nuseEffect(()=>{const loadReadings=async()=>{try{const allReadings=[];for(const c of consumers){const res=await fetch(\"http://localhost:5000/api/readings/\".concat(c.id));if(!res.ok)throw new Error(\"Gabim në kërkesë për lexime\");const data=await res.json();// Shto të dhëna të konsumatorit në secilin lexim\nconst enriched=data.map(r=>_objectSpread(_objectSpread({},r),{},{name:c.name,surname:c.surname,address:c.address,type:c.type}));allReadings.push(...enriched);}setReadings(allReadings);}catch(error){console.error(\"Gabim gjatë marrjes së leximeve:\",error);}};if(consumers.length>0){loadReadings();}},[consumers]);const[showScrollTop,setShowScrollTop]=useState(false);useEffect(()=>{const handleScroll=()=>{if(window.scrollY>300){setShowScrollTop(true);}else{setShowScrollTop(false);}};window.addEventListener('scroll',handleScroll);return()=>window.removeEventListener('scroll',handleScroll);},[]);const handleChange=e=>{setForm(_objectSpread(_objectSpread({},form),{},{[e.target.name]:e.target.value}));};const submitReading=async e=>{e.preventDefault();setSubmitting(true);const consumerIdNum=parseInt(form.consumerId);const consumer=consumers.find(c=>c.id===consumerIdNum);if(!consumer){alert(\"Zgjidh një konsumator të vlefshëm\");setSubmitting(false);return;}const current=parseFloat(form.currentReading);if(isNaN(current)||current<0){alert(\"Fut një lexim të vlefshëm numerik\");setSubmitting(false);return;}try{// Merr leximin e fundit nga backend\nconst res=await fetch(\"\".concat(API_BASE,\"/readings/\").concat(consumer.id));const data=await res.json();const lastReading=data.sort((a,b)=>new Date(b.date)-new Date(a.date))[0];const previous=lastReading?lastReading.currentReading:0;if(current<previous){alert(\"Leximi i tanish\\xEBm (\".concat(current,\") nuk mund t\\xEB jet\\xEB m\\xEB i vog\\xEBl se leximi i m\\xEBparsh\\xEBm (\").concat(previous,\")\"));setSubmitting(false);return;}const pricePerM3=consumer.type.toLowerCase()===\"biznes\"?1.2:0.5;const consumption=current-previous;const total=consumption*pricePerM3;const newReading={consumerId:consumer.id,date:new Date().toISOString(),previousReading:previous,currentReading:current,consumption,total};const response=await fetch(\"\".concat(API_BASE,\"/readings\"),{method:\"POST\",headers:{\"Content-Type\":\"application/json\"},body:JSON.stringify(newReading)});if(!response.ok){throw new Error(\"Gabim gjatë ruajtjes së leximit në backend\");}const savedReading=await response.json();const enrichedSavedReading=_objectSpread(_objectSpread({},savedReading),{},{name:consumer.name,surname:consumer.surname,address:consumer.address,type:consumer.type});setReadings(prev=>[...prev,enrichedSavedReading]);setForm({consumerId:\"\",currentReading:\"\"});}catch(error){alert(error.message);}finally{setSubmitting(false);}};const generatePDF=reading=>{const doc=new jsPDF();doc.setFontSize(18);doc.text(\"Fatura për Ujë\",70,20);doc.setFontSize(12);doc.text(\"Emri: \".concat(reading.name,\" \").concat(reading.surname),20,40);doc.text(\"Adresa: \".concat(reading.address),20,50);doc.text(\"Tipi: \".concat(reading.type),20,60);doc.text(\"Data: \".concat(new Date(reading.date).toLocaleDateString()),20,70);autoTable(doc,{startY:80,head:[[\"Leximi i Mëparshëm\",\"Leximi i Tanishëm\",\"Konsumi (m³)\",\"Çmimi për m³\",\"Totali\"]],body:[[reading.previousReading,reading.currentReading,reading.consumption,reading.type===\"Biznes\"?\"1.2\":\"0.5\",\"\".concat(reading.total.toFixed(2),\" MKD\")]]});doc.save(\"fature_\".concat(reading.name,\"_\").concat(reading.surname,\".pdf\"));};// Filtrim leximesh sipas konsumatorit dhe datës\nconst filteredReadings=readings.filter(r=>{const matchConsumer=selectedConsumerId?r.consumerId===parseInt(selectedConsumerId):true;const matchDate=selectedDate?new Date(r.date).toLocaleDateString()===new Date(selectedDate).toLocaleDateString():true;return matchConsumer&&matchDate;});return/*#__PURE__*/_jsxs(\"div\",{className:\"readings-container\",children:[/*#__PURE__*/_jsx(\"h2\",{children:\"Lexim i ri i ujit\"}),/*#__PURE__*/_jsxs(\"form\",{onSubmit:submitReading,className:\"readings-form\",children:[/*#__PURE__*/_jsxs(\"select\",{name:\"consumerId\",value:form.consumerId,onChange:handleChange,required:true,disabled:loadingConsumers||submitting,children:[/*#__PURE__*/_jsx(\"option\",{value:\"\",children:\"Zgjedh konsumatorin\"}),consumers.map(c=>/*#__PURE__*/_jsxs(\"option\",{value:c.id,children:[c.name,\" \",c.surname,\" - \",c.type]},c.id))]}),/*#__PURE__*/_jsx(\"input\",{type:\"number\",name:\"currentReading\",placeholder:\"Leximi i tanish\\xEBm\",value:form.currentReading,onChange:handleChange,required:true,min:\"0\",step:\"any\",disabled:submitting}),/*#__PURE__*/_jsx(\"button\",{type:\"submit\",disabled:submitting,children:submitting?\"Po ruhet...\":\"Ruaj leximin\"})]}),/*#__PURE__*/_jsx(\"h3\",{children:\"Historiku i leximeve\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"filters\",children:[/*#__PURE__*/_jsxs(\"select\",{value:selectedConsumerId,onChange:e=>setSelectedConsumerId(e.target.value),children:[/*#__PURE__*/_jsx(\"option\",{value:\"\",children:\"T\\xEB gjith\\xEB konsumator\\xEBt\"}),consumers.map(c=>/*#__PURE__*/_jsxs(\"option\",{value:c.id,children:[c.name,\" \",c.surname]},c.id))]}),/*#__PURE__*/_jsx(\"input\",{type:\"date\",value:selectedDate,onChange:e=>setSelectedDate(e.target.value)}),/*#__PURE__*/_jsx(\"button\",{onClick:()=>{setSelectedConsumerId(\"\");setSelectedDate(\"\");},children:\"Pastro filtrat\"})]}),filteredReadings.length===0?/*#__PURE__*/_jsx(\"p\",{className:\"no-readings-msg\",children:\"Nuk ka lexime p\\xEBr k\\xEBt\\xEB filt\\xEBr.\"}):/*#__PURE__*/_jsx(\"div\",{className:\"readings-table-wrapper\",children:/*#__PURE__*/_jsxs(\"table\",{className:\"readings-table\",children:[/*#__PURE__*/_jsx(\"thead\",{children:/*#__PURE__*/_jsxs(\"tr\",{children:[/*#__PURE__*/_jsx(\"th\",{children:\"Konsumatori\"}),/*#__PURE__*/_jsx(\"th\",{style:{textAlign:\"right\"},children:\"Leximi i m\\xEBparsh\\xEBm\"}),/*#__PURE__*/_jsx(\"th\",{style:{textAlign:\"right\"},children:\"Leximi i tanish\\xEBm\"}),/*#__PURE__*/_jsx(\"th\",{style:{textAlign:\"right\"},children:\"Konsumi (m\\xB3)\"}),/*#__PURE__*/_jsx(\"th\",{style:{textAlign:\"right\"},children:\"Totali (MKD)\"}),/*#__PURE__*/_jsx(\"th\",{style:{textAlign:\"right\"},children:\"Data\"}),/*#__PURE__*/_jsx(\"th\",{children:\"PDF\"})]})}),/*#__PURE__*/_jsx(\"tbody\",{children:filteredReadings.sort((a,b)=>new Date(b.date)-new Date(a.date)).map((r,i)=>/*#__PURE__*/_jsxs(\"tr\",{children:[/*#__PURE__*/_jsxs(\"td\",{children:[r.name,\" \",r.surname]}),/*#__PURE__*/_jsx(\"td\",{className:\"numeric\",children:r.previousReading}),/*#__PURE__*/_jsx(\"td\",{className:\"numeric\",children:r.currentReading}),/*#__PURE__*/_jsx(\"td\",{className:\"numeric\",children:r.consumption}),/*#__PURE__*/_jsxs(\"td\",{className:\"numeric\",children:[r.total.toFixed(2),\" MKD\"]}),/*#__PURE__*/_jsx(\"td\",{className:\"numeric\",children:new Date(r.date).toLocaleString()}),/*#__PURE__*/_jsx(\"td\",{children:/*#__PURE__*/_jsx(\"button\",{onClick:()=>generatePDF(r),children:\"Shkarko PDF\"})})]},i))})]})}),showScrollTop&&/*#__PURE__*/_jsx(\"button\",{className:\"scroll-to-top-float\",onClick:()=>window.scrollTo({top:0,behavior:'smooth'}),\"aria-label\":\"Kthehu lart\",children:\"\\u2191\"})]});}","map":{"version":3,"names":["useEffect","useState","jsPDF","autoTable","jsx","_jsx","jsxs","_jsxs","Readings","API_BASE","consumers","setConsumers","loadingConsumers","setLoadingConsumers","readings","setReadings","form","setForm","consumerId","currentReading","selectedConsumerId","setSelectedConsumerId","selectedDate","setSelectedDate","submitting","setSubmitting","fetch","concat","then","res","json","data","catch","err","console","error","loadReadings","allReadings","c","id","ok","Error","enriched","map","r","_objectSpread","name","surname","address","type","push","length","showScrollTop","setShowScrollTop","handleScroll","window","scrollY","addEventListener","removeEventListener","handleChange","e","target","value","submitReading","preventDefault","consumerIdNum","parseInt","consumer","find","alert","current","parseFloat","isNaN","lastReading","sort","a","b","Date","date","previous","pricePerM3","toLowerCase","consumption","total","newReading","toISOString","previousReading","response","method","headers","body","JSON","stringify","savedReading","enrichedSavedReading","prev","message","generatePDF","reading","doc","setFontSize","text","toLocaleDateString","startY","head","toFixed","save","filteredReadings","filter","matchConsumer","matchDate","className","children","onSubmit","onChange","required","disabled","placeholder","min","step","onClick","style","textAlign","i","toLocaleString","scrollTo","top","behavior"],"sources":["D:/AliMunishiApp/frontend/src/pages/Readings.jsx"],"sourcesContent":["import { useEffect, useState } from \"react\";\r\nimport jsPDF from \"jspdf\";\r\nimport autoTable from \"jspdf-autotable\";\r\nimport \"../styles/readings.css\";\r\n\r\nexport default function Readings() {\r\n  const API_BASE = \"https://ujesjellesi.onrender.com/api\";\r\n  const [consumers, setConsumers] = useState([]);\r\n  const [loadingConsumers, setLoadingConsumers] = useState(true);\r\n  const [readings, setReadings] = useState([]);\r\n  const [form, setForm] = useState({\r\n    consumerId: \"\",\r\n    currentReading: \"\",\r\n  });\r\n  const [selectedConsumerId, setSelectedConsumerId] = useState(\"\");\r\n  const [selectedDate, setSelectedDate] = useState(\"\");\r\n  const [submitting, setSubmitting] = useState(false);\r\n\r\n  // Merr konsumatorët nga backend\r\n  useEffect(() => {\r\n    fetch(`${API_BASE}/consumers`)\r\n      .then((res) => res.json())\r\n      .then((data) => {\r\n        setConsumers(data);\r\n        setLoadingConsumers(false);\r\n      })\r\n      .catch((err) => {\r\n        console.error(\"Gabim gjatë marrjes së konsumatorëve:\", err);\r\n        setLoadingConsumers(false);\r\n      });\r\n  }, []);\r\n\r\n  // Merr leximet për çdo konsumator pasi konsumatorët të jenë ngarkuar\r\n  useEffect(() => {\r\n    const loadReadings = async () => {\r\n      try {\r\n        const allReadings = [];\r\n\r\n        for (const c of consumers) {\r\n          const res = await fetch(`http://localhost:5000/api/readings/${c.id}`);\r\n          if (!res.ok) throw new Error(\"Gabim në kërkesë për lexime\");\r\n          const data = await res.json();\r\n\r\n          // Shto të dhëna të konsumatorit në secilin lexim\r\n          const enriched = data.map((r) => ({\r\n            ...r,\r\n            name: c.name,\r\n            surname: c.surname,\r\n            address: c.address,\r\n            type: c.type,\r\n          }));\r\n\r\n          allReadings.push(...enriched);\r\n        }\r\n\r\n        setReadings(allReadings);\r\n      } catch (error) {\r\n        console.error(\"Gabim gjatë marrjes së leximeve:\", error);\r\n      }\r\n    };\r\n\r\n    if (consumers.length > 0) {\r\n      loadReadings();\r\n    }\r\n  }, [consumers]);\r\nconst [showScrollTop, setShowScrollTop] = useState(false);\r\n\r\nuseEffect(() => {\r\n  const handleScroll = () => {\r\n    if (window.scrollY > 300) {\r\n      setShowScrollTop(true);\r\n    } else {\r\n      setShowScrollTop(false);\r\n    }\r\n  };\r\n\r\n  window.addEventListener('scroll', handleScroll);\r\n  return () => window.removeEventListener('scroll', handleScroll);\r\n}, []);\r\n\r\n\r\n  const handleChange = (e) => {\r\n    setForm({ ...form, [e.target.name]: e.target.value });\r\n  };\r\n\r\n  const submitReading = async (e) => {\r\n  e.preventDefault();\r\n  setSubmitting(true);\r\n\r\n  const consumerIdNum = parseInt(form.consumerId);\r\n  const consumer = consumers.find((c) => c.id === consumerIdNum);\r\n  if (!consumer) {\r\n    alert(\"Zgjidh një konsumator të vlefshëm\");\r\n    setSubmitting(false);\r\n    return;\r\n  }\r\n\r\n  const current = parseFloat(form.currentReading);\r\n  if (isNaN(current) || current < 0) {\r\n    alert(\"Fut një lexim të vlefshëm numerik\");\r\n    setSubmitting(false);\r\n    return;\r\n  }\r\n\r\n  try {\r\n    // Merr leximin e fundit nga backend\r\n    const res = await fetch(`${API_BASE}/readings/${consumer.id}`);\r\n    const data = await res.json();\r\n\r\n    const lastReading = data\r\n      .sort((a, b) => new Date(b.date) - new Date(a.date))[0];\r\n    const previous = lastReading ? lastReading.currentReading : 0;\r\n\r\n    if (current < previous) {\r\n      alert(\r\n        `Leximi i tanishëm (${current}) nuk mund të jetë më i vogël se leximi i mëparshëm (${previous})`\r\n      );\r\n      setSubmitting(false);\r\n      return;\r\n    }\r\n\r\n    const pricePerM3 = consumer.type.toLowerCase() === \"biznes\" ? 1.2 : 0.5;\r\n    const consumption = current - previous;\r\n    const total = consumption * pricePerM3;\r\n\r\n    const newReading = {\r\n      consumerId: consumer.id,\r\n      date: new Date().toISOString(),\r\n      previousReading: previous,\r\n      currentReading: current,\r\n      consumption,\r\n      total,\r\n    };\r\n\r\nconst response = await fetch(`${API_BASE}/readings`, {\r\n  method: \"POST\",\r\n  headers: { \"Content-Type\": \"application/json\" },\r\n  body: JSON.stringify(newReading),\r\n});\r\n\r\n\r\n    if (!response.ok) {\r\n      throw new Error(\"Gabim gjatë ruajtjes së leximit në backend\");\r\n    }\r\n\r\n    const savedReading = await response.json();\r\n\r\n    const enrichedSavedReading = {\r\n      ...savedReading,\r\n      name: consumer.name,\r\n      surname: consumer.surname,\r\n      address: consumer.address,\r\n      type: consumer.type,\r\n    };\r\n\r\n    setReadings((prev) => [...prev, enrichedSavedReading]);\r\n    setForm({ consumerId: \"\", currentReading: \"\" });\r\n  } catch (error) {\r\n    alert(error.message);\r\n  } finally {\r\n    setSubmitting(false);\r\n  }\r\n};\r\n\r\n\r\nconst generatePDF = (reading) => {\r\n  const doc = new jsPDF();\r\n\r\n  doc.setFontSize(18);\r\n  doc.text(\"Fatura për Ujë\", 70, 20);\r\n\r\n  doc.setFontSize(12);\r\n  doc.text(`Emri: ${reading.name} ${reading.surname}`, 20, 40);\r\n  doc.text(`Adresa: ${reading.address}`, 20, 50);\r\n  doc.text(`Tipi: ${reading.type}`, 20, 60);\r\n  doc.text(`Data: ${new Date(reading.date).toLocaleDateString()}`, 20, 70);\r\n\r\n  autoTable(doc, {\r\n    startY: 80,\r\n    head: [[\"Leximi i Mëparshëm\", \"Leximi i Tanishëm\", \"Konsumi (m³)\", \"Çmimi për m³\", \"Totali\"]],\r\n    body: [\r\n      [\r\n        reading.previousReading,\r\n        reading.currentReading,\r\n        reading.consumption,\r\n        reading.type === \"Biznes\" ? \"1.2\" : \"0.5\",\r\n        `${reading.total.toFixed(2)} MKD`,\r\n      ],\r\n    ],\r\n  });\r\n\r\n  doc.save(`fature_${reading.name}_${reading.surname}.pdf`);\r\n};\r\n\r\n\r\n  // Filtrim leximesh sipas konsumatorit dhe datës\r\n  const filteredReadings = readings.filter((r) => {\r\n    const matchConsumer = selectedConsumerId\r\n      ? r.consumerId === parseInt(selectedConsumerId)\r\n      : true;\r\n\r\n    const matchDate = selectedDate\r\n      ? new Date(r.date).toLocaleDateString() ===\r\n        new Date(selectedDate).toLocaleDateString()\r\n      : true;\r\n\r\n    return matchConsumer && matchDate;\r\n  });\r\n\r\n  return (\r\n    <div className=\"readings-container\">\r\n      <h2>Lexim i ri i ujit</h2>\r\n      <form onSubmit={submitReading} className=\"readings-form\">\r\n        <select\r\n          name=\"consumerId\"\r\n          value={form.consumerId}\r\n          onChange={handleChange}\r\n          required\r\n          disabled={loadingConsumers || submitting}\r\n        >\r\n          <option value=\"\">Zgjedh konsumatorin</option>\r\n          {consumers.map((c) => (\r\n            <option key={c.id} value={c.id}>\r\n              {c.name} {c.surname} - {c.type}\r\n            </option>\r\n          ))}\r\n        </select>\r\n        <input\r\n          type=\"number\"\r\n          name=\"currentReading\"\r\n          placeholder=\"Leximi i tanishëm\"\r\n          value={form.currentReading}\r\n          onChange={handleChange}\r\n          required\r\n          min=\"0\"\r\n          step=\"any\"\r\n          disabled={submitting}\r\n        />\r\n        <button type=\"submit\" disabled={submitting}>\r\n          {submitting ? \"Po ruhet...\" : \"Ruaj leximin\"}\r\n        </button>\r\n      </form>\r\n\r\n      <h3>Historiku i leximeve</h3>\r\n\r\n      <div className=\"filters\">\r\n        <select\r\n          value={selectedConsumerId}\r\n          onChange={(e) => setSelectedConsumerId(e.target.value)}\r\n        >\r\n          <option value=\"\">Të gjithë konsumatorët</option>\r\n          {consumers.map((c) => (\r\n            <option key={c.id} value={c.id}>\r\n              {c.name} {c.surname}\r\n            </option>\r\n          ))}\r\n        </select>\r\n        <input\r\n          type=\"date\"\r\n          value={selectedDate}\r\n          onChange={(e) => setSelectedDate(e.target.value)}\r\n        />\r\n        <button\r\n          onClick={() => {\r\n            setSelectedConsumerId(\"\");\r\n            setSelectedDate(\"\");\r\n          }}\r\n        >\r\n          Pastro filtrat\r\n        </button>\r\n      </div>\r\n\r\n      {filteredReadings.length === 0 ? (\r\n        <p className=\"no-readings-msg\">Nuk ka lexime për këtë filtër.</p>\r\n      ) : (\r\n        <div className=\"readings-table-wrapper\">\r\n          <table className=\"readings-table\">\r\n            <thead>\r\n              <tr>\r\n                <th>Konsumatori</th>\r\n                <th style={{ textAlign: \"right\" }}>Leximi i mëparshëm</th>\r\n                <th style={{ textAlign: \"right\" }}>Leximi i tanishëm</th>\r\n                <th style={{ textAlign: \"right\" }}>Konsumi (m³)</th>\r\n                <th style={{ textAlign: \"right\" }}>Totali (MKD)</th>\r\n                <th style={{ textAlign: \"right\" }}>Data</th>\r\n                <th>PDF</th>\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              {filteredReadings\r\n                .sort((a, b) => new Date(b.date) - new Date(a.date))\r\n                .map((r, i) => (\r\n                  <tr key={i}>\r\n                    <td>{r.name} {r.surname}</td>\r\n                    <td className=\"numeric\">{r.previousReading}</td>\r\n                    <td className=\"numeric\">{r.currentReading}</td>\r\n                    <td className=\"numeric\">{r.consumption}</td>\r\n                    <td className=\"numeric\">{r.total.toFixed(2)} MKD</td>\r\n                    <td className=\"numeric\">{new Date(r.date).toLocaleString()}</td>\r\n                    <td>\r\n                      <button onClick={() => generatePDF(r)}>Shkarko PDF</button>\r\n                    </td>\r\n                  </tr>\r\n                ))}\r\n            </tbody>\r\n          </table>\r\n        </div>\r\n      )}\r\n    {showScrollTop && (\r\n  <button \r\n    className=\"scroll-to-top-float\"\r\n    onClick={() => window.scrollTo({ top: 0, behavior: 'smooth' })}\r\n    aria-label=\"Kthehu lart\"\r\n  >\r\n    ↑\r\n  </button>\r\n)}\r\n\r\n    </div>\r\n  );\r\n}\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}